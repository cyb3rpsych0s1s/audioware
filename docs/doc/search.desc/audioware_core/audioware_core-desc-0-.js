searchState.loadedDescShard("audioware_core", 0, "Audio settings.\nAny audio whose sample rate is known.\nConsumes <code>T</code>, absorbing its data.\nAudio data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAudio settings.\nCurrent audio duration, based on its slice.\nTotal duration, regardless of slice and settings.\nConsumes <code>T</code>, absorbing its data if any.\nConsumes <code>T</code>, absorbing its data if any.\nConsumes <code>T</code>, absorbing its data if any.\nConsumes <code>T</code>, absorbing its data if any.\nConsumes <code>T</code>, absorbing its data if any.\nConsumes <code>T</code>, absorbing its data if any.\nSNAFU context selector for the …\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsumes <code>T</code>, absorbing its data if any.\nSNAFU context selector for the <code>PanningError::OutOfRange</code> …\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsumes <code>T</code>, absorbing its data if any.")