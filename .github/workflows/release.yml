name: Release
on:
  push:
    branches:
      - main
    tags:
      - "v*"
      - "rc*"
      - "beta*"
      - "alpha*"

env:
  CARGO_TERM_COLOR: always
  IS_DRAFT: ${{ startsWith(github.ref_name, 'beta') || startsWith(github.ref_name, 'alpha') }}

jobs:
  bundle:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set LIBCLANG_PATH
        run: echo "LIBCLANG_PATH=$((gcm clang).source -replace "clang.exe")" >> $env:GITHUB_ENV
      - name: Prepare Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-10
          targets: x86_64-pc-windows-msvc
      - uses: Swatinem/rust-cache@v2
        with:
          key: release
      - name: Additional tools
        uses: taiki-e/install-action@v2
        with:
          tool: just
      - name: Setup UPX
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
      - name: Bundle mod files
        run: just ci 'Audioware-windows-latest-${{ github.ref_name }}'
      - name: Optimize binary size
        run: just optimize 'Audioware-windows-latest-${{ github.ref_name }}'
      - name: Zip files
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: zip
          filename: Audioware-windows-latest-${{ github.ref_name }}.zip
          directory: Audioware-windows-latest-${{ github.ref_name }}
          path: .
          recursive_exclusions: 'Debug.reds debug.reds'
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-latest-${{ github.ref_name }}-artifact
          path: Audioware-windows-latest-${{ github.ref_name }}/Audioware-windows-latest-${{ github.ref_name }}.zip
          if-no-files-found: error
  release:
    if: ${{ startsWith(github.event.ref, 'refs/tags') }}
    runs-on: windows-latest
    needs: bundle
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-${{ github.ref_name }}-artifact
      - name: Create release ${{ github.ref_name }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "Audioware-windows-latest-${{ github.ref_name }}.zip"
          draft: ${{ env.IS_DRAFT }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
